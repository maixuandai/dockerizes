server {
    listen       80;
    server_name   stg.mxdai.co;
    index index.htm index.html;

    #return 301 https://$server_name$request_uri;
    # tell users to go to SSL version this time
    if ($ssl_protocol = "") {
        rewrite     ^   https://$server_name$request_uri? permanent;
    }

}


server {
    listen 443 ssl;
    server_name   stg.mxdai.co;
    index  index.php index.htm index.html;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/stg.mxdai.co/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/stg.mxdai.co/privkey.pem;

    # tell users to go to SSL version next time
    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains;";

    # tell the browser dont allow hosting in a frame
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    #enables all versions of TLS, but not SSLv2 or 3 which are weak and now deprecated.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

   

    location / {
                proxy_redirect     off;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header Host $host;
                proxy_pass http://stg ;
                index  index.html index.htm;

    }
}




server {
    listen       80;
    server_name  qa.mxdai.co;
    index index.htm index.html;

    #return 301 https://$server_name$request_uri;
    # tell users to go to SSL version this time
    if ($ssl_protocol = "") {
        rewrite     ^   https://$server_name$request_uri? permanent;
    }

}


server {
    listen 443 ssl;
    server_name   qa.mxdai.co;
    index  index.php index.htm index.html;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/qa.mxdai.co/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/qa.mxdai.co/privkey.pem;

    # tell users to go to SSL version next time
    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains;";

    # tell the browser dont allow hosting in a frame
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    #enables all versions of TLS, but not SSLv2 or 3 which are weak and now deprecated.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

   

    location / {
    proxy_pass  http://jhipster:9000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Port $server_port;
    proxy_set_header X-Request-Start $msec;

    }
}

server {
    listen       80;
    server_name  stg-jp-dashboard.hottab.us;
    index index.htm index.html;

    #return 301 https://$server_name$request_uri;
    # tell users to go to SSL version this time
    if ($ssl_protocol = "") {
        rewrite     ^   https://$server_name$request_uri? permanent;
    }

}


server {
    listen 443 ssl;
    server_name   stg-jp-dashboard.hottab.us;
    index  index.php index.htm index.html;
    ssl on;
    ssl_certificate /etc/letsencrypt/live/stg-jp-dashboard.hottab.us/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/stg-jp-dashboard.hottab.us/privkey.pem;

    # tell users to go to SSL version next time
    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains;";

    # tell the browser dont allow hosting in a frame
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    #enables all versions of TLS, but not SSLv2 or 3 which are weak and now deprecated.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

   

    location / {
                proxy_redirect     off;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $remote_addr;
                proxy_set_header Host $host;
                proxy_pass http://jp ;
                index  index.html index.htm;

    }
}


